@page "/coupon"
@page "/coupon/{code}"

@attribute [Authorize]
@inject NavigationManager navigationManager;
@inject ICoupon couponInterface;

<MyAdminLayout></MyAdminLayout>

<style>
    .app {
        width: 99%;
    }

    .topnav {
        margin-top: 51px;
        margin-right: auto;
        margin-left: auto;
        color: #CB4427
    }

        .topnav button {
            background-color: white;
            color: #CB4427;
            border: solid 1px;
            border-color: #CB4427;
            height: 35px;
            border-radius: 5px;
            padding: 10px;
            margin: 5px;
            transition: 0.5s;
        }

            .topnav button:hover {
                background-color: black;
                color: white;
                cursor: pointer;
                transition: 0.5s;
            }

    .topon {
        margin-right: auto;
        margin-left: auto;
        color: #CB4427;
        margin: 5px;
    }

    .row {
        display: flex;
        margin-top: 10px;
    }

    .col-6 {
        width: 50%;
    }

    .image {
        width: 100%;
        height: auto;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .form-control {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    .button-container {
        display: flex;
        justify-content: space-between;
    }

    .btn-primary, .btn-secondary {
        padding: 10px 20px;
        border-radius: 5px;
        cursor: pointer;
    }

    .btn-primary {
        background-color: #007bff;
        color: #fff;
    }

    .btn-secondary {
        background-color: #6c757d;
        color: #fff;
    }

</style>
<div>
    a
</div>
<div class="app">
    <div class="topnav">
        <a href="coupons"><button>All Coupons</button> </a>
        <a href="coupon"><button>Add a Coupon</button> </a>
    </div>
    <h3 class="topon">Manage Coupons </h3>
</div>

<div class="row mt-10">
    <div class="col-6">
        <img class="image" src="https://cdn.pixabay.com/photo/2017/03/13/17/26/ecommerce-2140604_640.jpg" />
    </div>

    <div class="col-6">
        @if (selectedCoupon.Id == Guid.Empty)
        {
            <h1> Add Coupon</h1>
        }
        else
        {
            <h1> Update Coupon </h1>
        }
        <EditForm Model="@selectedCoupon" OnValidSubmit="addCoupon">
            <DataAnnotationsValidator />

            <div class="form-group">
                <label for="code">Coupon Code</label>
                <input type="text" class="form-control" id="code" @bind="@selectedCoupon.CouponCode" aria-describedby="name" />
                <ValidationMessage For="@(()=>@selectedCoupon.CouponCode)" />
            </div>

            <div class="form-group">
                <label for="amount">Coupon Amount</label>
                <input type="number" class="form-control" id="amount" @bind="@selectedCoupon.CouponAmount" aria-describedby="name" />
                <ValidationMessage For="@(()=>@selectedCoupon.CouponAmount)" />
            </div>

            <div class="form-group">
                <label for="minAmount">Coupon Min Amount</label>
                <input type="number" class="form-control" id="minAmount" @bind="@selectedCoupon.CouponMinAmount" aria-describedby="name" />
                <ValidationMessage For="@(()=>@selectedCoupon.CouponMinAmount)" />
            </div>

            <div class="button-container">
                @if (selectedCoupon.Id == Guid.Empty)
                {
                    <button type="submit" class="btn-primary">Add Coupon</button>
                }
                else
                {
                    <button type="submit" class="btn-primary">Update Coupon</button>
                }
                <button type="button" @onclick="@(()=> new CouponDto())" class="btn-secondary">Reset</button>
            </div>
        </EditForm>
    </div>
</div>

@code {


    [Parameter]

    public string code { get; set; }

    CouponDto selectedCoupon = new CouponDto();


    private async Task addCoupon()
    {
        CouponRequestDto coupon = new CouponRequestDto()
            {
                CouponAmount = selectedCoupon.CouponAmount,
                CouponCode = selectedCoupon.CouponCode,
                CouponMinAmount = selectedCoupon.CouponMinAmount
            };

        if (selectedCoupon.Id == Guid.Empty || selectedCoupon.Id == null)
        {
            Console.WriteLine(selectedCoupon.Id);
            var res = await couponInterface.AddCoupon(coupon);
            navigationManager.NavigateTo("coupons");
        }
        else
        {
            //update
            var res = await couponInterface.UpdateCoupon(selectedCoupon.Id, coupon);
            navigationManager.NavigateTo("coupons");
        }
    }

    protected override async  Task OnParametersSetAsync(){

        if (!string.IsNullOrWhiteSpace(code))
        {
            selectedCoupon = await couponInterface.GetCouponAsync(code);
        }

    }


}