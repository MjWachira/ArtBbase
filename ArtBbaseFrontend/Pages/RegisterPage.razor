@page "/register"

@inject IAuth authInterface;
@inject IJSRuntime jsRuntime

<div class="main">
    <div class="left">
    </div>

    <div class="right">

        <div class="logform">
            <h3>Register</h3>

            <label for="names">Full Names:</label>
            <input type="text" @bind=newUser.Name id="names" name="names" required>

            <label for="email">Email:</label>
            <input type="email" @bind=newUser.Email id="email" name="email" required>

            <label for="phone">Phone Number:</label>
            <input type="number" @bind=newUser.PhoneNumber id="phone" name="phone" required>

            <label for="password">Password:</label>
            <input type="password" @bind=newUser.Password id="password" name="password" required>

            <label for="password">Comfirm Password:</label>
            <input type="password" id="password" name="password" required>

            <button type="submit" @onclick =regUser  class="loginbtn">Register</button>

            <p>Already a user?<a href="/Login">Login Here</a></p>

        </div>

    </div>

</div>

@code {
    private RegisterRequestDto newUser = new RegisterRequestDto();

    private async Task regUser()
    {
        var res = await authInterface.Register(newUser);
        await jsRuntime.InvokeVoidAsync("ShowAlert", "success", res.Result);

    }
}
