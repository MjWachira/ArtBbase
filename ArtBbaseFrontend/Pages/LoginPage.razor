@page "/login"


@inject IAuth authInterface
@inject ILocalStorageService localStorage
@inject AuthenticationStateProvider authProvider
@inject NavigationManager navigationManager


<div class="main">
    <div class="left">
    </div>

    <div class="right">

        <div class="logform">
            <h3>Welcome Back</h3>

            <br />

            <label for="email">Email:</label>
            <input type="email" @bind="user.Username" id="email" name="email" required>

            <label for="password">Password:</label>
            <input type="password" @bind="user.Password" id="password" name="password" required>

            <label for="password">Comfirm Password:</label>
            <input type="password" id="password" name="password" required>
            <button type="submit" @onclick="loginUser" class="loginbtn">Login</button>
            

            <p>New User?<a href="/register">Register Here</a></p>

        </div>

    </div>

</div>


@code {

    private LoginRequestDto user = new LoginRequestDto();

    private async Task loginUser()
    {
        var res = await authInterface.Login(user);
        var usr = res.User;
       


        if (!string.IsNullOrWhiteSpace(res.Token))
        {
            await localStorage.SetItemAsStringAsync("Token", res.Token);
            await localStorage.SetItemAsStringAsync("UserId", usr.Id);
            await authProvider.GetAuthenticationStateAsync();
            navigationManager.NavigateTo("/home");
        }


    }
}


