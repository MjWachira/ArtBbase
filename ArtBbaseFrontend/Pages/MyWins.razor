@page "/mywins"

@inject IJSRuntime jsRuntime
@using Newtonsoft.Json;
@inject IArt productInterface
@inject IBid bidService
@inject IOrder orderservice
@inject NavigationManager navigationManager
@using ArtBbaseFrontend.Models.Dtos.Bid

<MyBuyerLayout></MyBuyerLayout>
<style>
    .app{
        padding:5px; 
        display:flex;
        flex-direction:column;
        justify-content: center;
        gap:15px;
    }


    .topon {
        margin-top: 51px;
        margin-right: auto;
        margin-left: auto;
        color: #CB4427
    }

    .bid-item{
        width:95%;
        display:flex;
        height:30%;
        background-color:white;
        flex-wrap:wrap;
        justify-content:center;
    }
    .bid-img{
        width:20%;
        padding:5px;
    }
    .bid-item img{
        height:70px;
        width:80%;
        max-width:100px;
        
    }

    .bid-details{
        width:80%;
        display: flex;
        justify-content:space-between;
        align-content:center;
        padding:5px;
        flex-wrap:wrap;
        gap:10px;
    }
    .bid-details div{
        display:flex;
        flex-direction:column;
       justify-content:space-between;
       height:60px;
    }
    .bid-details p{
            color: #CB4427;
            font-weight: bold;
    }

    .btn-bid {
        background-color: #CB4427;
        border: none;
        width: 90%;
        padding: 5px;
        height: 25px;
        border-radius: 5px;
        color: white;
    }

    .btn-bid-lost {
        background-color: #F5DAD4;
        border: none;
        width: 90%;
        padding: 5px;
        height: 25px;
        border-radius: 5px;
        color: white;
    }

    .btn-bid-won {
        background-color: black;
        border: none;
        width: 90%;
        padding: 5px;
        height: 25px;
        border-radius: 5px;
        color: white;
    }
 </style>


@if (isLoading)
{
    <p><i>Loading...</i></p>
}
else
{

    @if (wonbids.Count > 0)
    {
        <div class="app">
        <h3 class="topon"> My Wins</h3>
            @foreach (var bid in wonbids)
            {
                <div class="bid-item">
                    <div class="bid-img">
                        <img src="@bid.ArtImage" />
                    </div>
                    <div class="bid-details">
                        <div class="bid-left">
                            <h4> @bid.ArtName </h4>
                            <p style="background-color:#FFE9E4; Padding:4px;">Bid Won</p>

                        </div>
                        <div class="bid-center">
                            <span style="display:flex;">Your Bid: <p> Ksh @bid.BidAmmount</p></span>
                            <span style="display:flex;">Highest Bid: <p>Ksh @bid.BidAmmount</p></span>
                        </div>
                        <div class="bid-right">
                            <h4>00D:00H:00M:00S</h4>
                            <a href="myorders"><button @onclick="@(() => placeOrder(bid.Id))" class="btn-bid-won">Checkout</button></a>
                        </div>
                    </div>
                </div>
            }
        </div>
         
    }
    else
    {
        <p><i>No Art Found!!</i></p>
    }
}


@code {
    private List<ArtDto> products = new List<ArtDto>();
    private List<BidDto> wonbids = new List<BidDto>();
    private bool isLoading = true;
    private double bidAmount;
    private string UserId; // Variable to store SellerId

    protected override async Task OnInitializedAsync()
    {
        // Retrieve SellerId from local storage
        UserId = await jsRuntime.InvokeAsync<string>("localStorage.getItem", "UserId");
        wonbids = await bidService.GetMyWins(UserId);

        isLoading = false;


    }

    private void showProduct(Guid id)
    {
        //navigationManager.NavigateTo($"Art/{id}");
    }
    private async Task placeOrder(Guid id)
    {
            var orderRequest = new OrderRequestDto
                {
                    BidderId = new Guid(UserId),
                };


            var response = await orderservice.PlaceOrder(id, orderRequest);
        }
    }
}
 